name: 대학 공지사항 크롤링

# 실행 조건
on:
  # 스케줄 실행 (매일 오전 9시, 오후 6시)
  schedule:
    - cron: '0 0,3,6,9,12 * * 1-6'  # UTC 기준 (한국시간 -9시간)
  
  # 수동 실행 허용
  workflow_dispatch:
    inputs:
        mode:
          description: '실행 모드'
          required: true
          default: 'crawl'
          type: choice
          options:
            - crawl      # 일반 크롤링
            - test       # 테스트 (디버깅)
            - debug      # 상세 디버깅

permissions:
  contents: write
  
jobs:
  crawl:
    runs-on: ubuntu-latest
    
    steps:
    # 1. 저장소 코드 가져오기
    - name: 체크아웃
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    # 2. Python 설치
    - name: Python 설정
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    # 3. 캐시 설정 (속도 향상)
    - name: 캐시 설정
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
    
    # 4. 패키지 설치
    - name: 의존성 설치
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    # 모드에 따라 다른 스크립트 실행
    - name: 스크립트 실행
      run: |
        if [ "${{ github.event.inputs.mode }}" = "test" ]; then
          echo "🧪 테스트 모드 실행"
          python test_crawl.py
        elif [ "${{ github.event.inputs.mode }}" = "debug" ]; then
          echo "🔍 디버그 모드 실행"
          python debug_crawl.py
        else
          echo "🤖 일반 크롤링 실행"
          python main.py
        fi
    
    # 크롤링 모드일 때만 결과 저장
    - name: 결과 저장
      if: github.event.inputs.mode == 'crawl' || github.event.inputs.mode == ''
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git pull origin main
        git add data/
        if git diff --staged --quiet; then
          echo "변경사항이 없습니다."
        else
          git commit -m "🤖 크롤링 결과 업데이트: $(date +'%Y-%m-%d %H:%M:%S')"
          git push
        fi
